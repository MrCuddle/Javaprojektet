/*
 * Copyright (C) 2014 Simon Dahlberg and Jesper Sahlin
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package databasprojektet;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Arrays;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Simon Dahlberg and Jesper Sahlin
 */
public class CreatePunWindow extends javax.swing.JFrame
{

    MainWindow mGrandParent;
    AdminWindow mParent;

    /**
     * Creates new form NewPunWindow
     */
    public CreatePunWindow(MainWindow grandParent, AdminWindow parent)
    {
        mGrandParent = grandParent;
        mParent = parent;
        initComponents();
        InitializeCategories();
        setLocationRelativeTo(null);
    }

    private void InitializeCategories()
    {
        ResultSet categoriesFromDb = SQLHelper.GetResultSetFromQuery("SELECT Name from category");
        try
        {
            while (categoriesFromDb.next())
            {
                mCategoryComboBox.addItem(categoriesFromDb.getString("Name"));
            }
        }
        catch (SQLException e)
        {
            System.out.println(e);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jScrollPane1 = new javax.swing.JScrollPane();
        mPunContentWindow = new javax.swing.JTextArea();
        mCancelButton = new javax.swing.JButton();
        mOkButton = new javax.swing.JButton();
        mContentLabel = new javax.swing.JLabel();
        mCategoryLabel = new javax.swing.JLabel();
        mCategoryComboBox = new javax.swing.JComboBox();
        mNewCategoryButton = new javax.swing.JButton();
        mTitleField = new javax.swing.JTextField();
        mTitleLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        mPunContentWindow.setColumns(20);
        mPunContentWindow.setRows(5);
        jScrollPane1.setViewportView(mPunContentWindow);

        mCancelButton.setText("Avbryt");
        mCancelButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                mCancelButtonActionPerformed(evt);
            }
        });

        mOkButton.setText("OK");
        mOkButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                mOkButtonActionPerformed(evt);
            }
        });

        mContentLabel.setText("Inneh√•ll");

        mCategoryLabel.setText("Kategori");

        mNewCategoryButton.setText("Ny Kategori");
        mNewCategoryButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                mNewCategoryButtonActionPerformed(evt);
            }
        });

        mTitleField.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                mTitleFieldActionPerformed(evt);
            }
        });

        mTitleLabel.setText("Titel");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(mOkButton, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(mCancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(mContentLabel)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(mCategoryLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(mCategoryComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(mNewCategoryButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(mTitleLabel)
                        .addGap(5, 5, 5)
                        .addComponent(mTitleField, javax.swing.GroupLayout.DEFAULT_SIZE, 172, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mCategoryLabel)
                    .addComponent(mCategoryComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mNewCategoryButton)
                    .addComponent(mTitleField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mTitleLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mContentLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mOkButton)
                    .addComponent(mCancelButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mCancelButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_mCancelButtonActionPerformed
    {//GEN-HEADEREND:event_mCancelButtonActionPerformed
        this.dispose();
    }//GEN-LAST:event_mCancelButtonActionPerformed

    
    private void mOkButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_mOkButtonActionPerformed
    {//GEN-HEADEREND:event_mOkButtonActionPerformed
        String title = mTitleField.getText();
        String content = mPunContentWindow.getText();
        if(title != null && !title.isEmpty() && content != null && !content.isEmpty())
        {
        int punId = GetValidID();
        String category = (String) mCategoryComboBox.getSelectedItem();
        int adder = mGrandParent.GetActiveUser().GetId();
        Date date = Application.GetCurrentDate();
        
        String newPunQuery = "INSERT INTO pun VALUES (" + punId + 
                ", '" + content +
                "', '" + category +
                "', " + adder +
                ", '" + date +
                "', " + 0 +
                ", '" + title +
                "');";
        SQLHelper.ExecuteUpdate(newPunQuery);
        try
        {
            Thread.sleep(1000);
        }
        catch(InterruptedException e)
        {
            System.out.println(e);
        }
        mGrandParent.UpdatePuns();
        mParent.UpdatePuns();
        dispose();
        }
    }

    /**
     * Finds an valid, non-existing ID in the "Pun"-table
     */
    private int GetValidID()
    {
        int newId = 0;
        ResultSet rs = SQLHelper.GetResultSetFromQuery("SELECT * FROM pun;");
        int arraySize = SQLHelper.GetRowCount(rs);   
        int[] existingIds = new int[arraySize];
               
        try
        {
            int counter = 0;
            while(rs.next())            
            {
                existingIds[counter] = rs.getInt(1);
                counter++;
            }
        }
        catch (SQLException ex)
        {
            Logger.getLogger(CreatePunWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        Arrays.sort(existingIds);
        
        for (int i = 0; i < arraySize + 1; i++)
        {
            int searchRes = Arrays.binarySearch(existingIds, newId);
            if (searchRes < 0)
            {
                break;
            }

            newId++;
        }
        
        return newId;
    }//GEN-LAST:event_mOkButtonActionPerformed

    private void mNewCategoryButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_mNewCategoryButtonActionPerformed
    {//GEN-HEADEREND:event_mNewCategoryButtonActionPerformed
        mParent.AddCategory("V√§lj en titel");
    }//GEN-LAST:event_mNewCategoryButtonActionPerformed

    private void mTitleFieldActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_mTitleFieldActionPerformed
    {//GEN-HEADEREND:event_mTitleFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mTitleFieldActionPerformed

//    /**
//     * @param args the command line arguments
//     */
//    public static void main(String args[])
//    {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try
//        {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
//            {
//                if ("Nimbus".equals(info.getName()))
//                {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        }
//        catch (ClassNotFoundException ex)
//        {
//            java.util.logging.Logger.getLogger(CreatePunWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        catch (InstantiationException ex)
//        {
//            java.util.logging.Logger.getLogger(CreatePunWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        catch (IllegalAccessException ex)
//        {
//            java.util.logging.Logger.getLogger(CreatePunWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        catch (javax.swing.UnsupportedLookAndFeelException ex)
//        {
//            java.util.logging.Logger.getLogger(CreatePunWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable()
//        {
//            public void run()
//            {
//                new CreatePunWindow().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton mCancelButton;
    private javax.swing.JComboBox mCategoryComboBox;
    private javax.swing.JLabel mCategoryLabel;
    private javax.swing.JLabel mContentLabel;
    private javax.swing.JButton mNewCategoryButton;
    private javax.swing.JButton mOkButton;
    private javax.swing.JTextArea mPunContentWindow;
    private javax.swing.JTextField mTitleField;
    private javax.swing.JLabel mTitleLabel;
    // End of variables declaration//GEN-END:variables
}
