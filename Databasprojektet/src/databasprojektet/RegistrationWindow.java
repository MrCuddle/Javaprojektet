/*
 * Copyright (C) 2014 Simpa
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package databasprojektet;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Arrays;

/**
 *
 * @author Simpa
 */
public class RegistrationWindow extends javax.swing.JFrame
{

    /**
     * Creates new form Register
     *
     * @param isAdmin
     */
    public RegistrationWindow(boolean isAdmin)
    {
        initComponents();
        if (!isAdmin)
        {
            mAdminCheckbox.setVisible(false);
        }
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        mNameField = new javax.swing.JTextField();
        mNameLabel = new javax.swing.JLabel();
        mPasswordLabel = new javax.swing.JLabel();
        mConfirmPasswordLabel = new javax.swing.JLabel();
        mOkButton = new javax.swing.JButton();
        mPasswordField = new javax.swing.JPasswordField();
        mConfirmPasswordField = new javax.swing.JPasswordField();
        jLabel1 = new javax.swing.JLabel();
        mAdminCheckbox = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        mNameField.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                mNameFieldActionPerformed(evt);
            }
        });

        mNameLabel.setText("Namn");

        mPasswordLabel.setText("Lösenord");

        mConfirmPasswordLabel.setText("Bekräfta lösenord");

        mOkButton.setText("OK");
        mOkButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                mOkButtonActionPerformed(evt);
            }
        });

        jLabel1.setName("jlblMessage"); // NOI18N

        mAdminCheckbox.setText("Administratör");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(mNameField)
                    .addComponent(mNameLabel)
                    .addComponent(mPasswordLabel)
                    .addComponent(mConfirmPasswordLabel)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(mOkButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(mAdminCheckbox)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addGap(32, 32, 32))
                    .addComponent(mPasswordField)
                    .addComponent(mConfirmPasswordField))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(mNameLabel)
                .addGap(4, 4, 4)
                .addComponent(mNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mPasswordLabel)
                .addGap(1, 1, 1)
                .addComponent(mPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(mConfirmPasswordLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mConfirmPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(mOkButton)
                        .addComponent(mAdminCheckbox))
                    .addComponent(jLabel1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mNameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mNameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mNameFieldActionPerformed

    private void mOkButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mOkButtonActionPerformed
        boolean isDuplicate = false;
        jLabel1.setText("");
        if (Arrays.equals(mPasswordField.getPassword(), mConfirmPasswordField.getPassword()))
        {
            try
            {
                ResultSet rs = SQLHelper.GetResultSetFromQuery("Select UserName from users");
                System.out.println(mNameField.getText());
                while (rs.next())
                {
                    System.out.println(rs.getString("UserName"));
                    if (mNameField.getText().toUpperCase().equals(rs.getString("UserName").toUpperCase()))
                    {
                        isDuplicate = true;
                    }
                }
                if (!isDuplicate)
                {
                    int isAdmin = mAdminCheckbox.isSelected() ? 1 : 0;
                    String password = new String(mPasswordField.getPassword());
                    SQLHelper.ExecuteUpdate("INSERT INTO users(UserName, Password, IsAdmin) VALUES ('" + mNameField.getText() + "', '" + password + "', '" + isAdmin + "');");
                    setVisible(false);
                    jLabel1.setText("Account created succesfully");
                }
                else
                {
                    //Ifrågasätt användarens sexuella läggning. (användarnamnet finns redan hehu).
                    System.out.println("Hörrö, användarnamnet äro upptaget");
                    jLabel1.setText("User name already exists");
                }
            }
            catch (SQLException e)
            {
                System.out.println(e);
            }
        }
        else
        {
            System.out.println("Password does not match");
            jLabel1.setText("Password does not match");
        }
    }//GEN-LAST:event_mOkButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        }
        catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(RegistrationWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            @Override
            public void run()
            {
                new RegistrationWindow(false).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JCheckBox mAdminCheckbox;
    private javax.swing.JPasswordField mConfirmPasswordField;
    private javax.swing.JLabel mConfirmPasswordLabel;
    private javax.swing.JTextField mNameField;
    private javax.swing.JLabel mNameLabel;
    private javax.swing.JButton mOkButton;
    private javax.swing.JPasswordField mPasswordField;
    private javax.swing.JLabel mPasswordLabel;
    // End of variables declaration//GEN-END:variables
}
